name: CI

on:
  push:
    branches:
      - '*'  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Creation du .env à la racine
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "GF_SECURITY_ADMIN_PASSWORD=${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}" >> .env

      - name: Creation du .env pour l'API
        run: |
          echo "ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}" >> api/.env
          echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" >> api/.env
          echo "USER_USERNAME=${{ secrets.USER_USERNAME }}" >> api/.env
          echo "USER_PASSWORD=${{ secrets.USER_PASSWORD }}" >> api/.env

      - name: Creation du .env pour la connection
        run: |
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> api/dto/.env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> api/dto/.env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> api/dto/.env
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> api/dto/.env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> api/dto/.env

      - name: Creation du .env pour Dagshub
        run: |
          echo "DAGSHUB_TOKEN=${{ secrets.DAGSHUB_TOKEN }}" >> api/classifier/.env

      - name: Création du .env pour le flask
        run: |
          echo "API_URL=${{ secrets.API_URL }}" >> web/.env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> web/.env
          
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2  

      - name: Installation de Docker-Compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.14.2' 

      - name: Run Docker-Compose pour l'initialization
        run: |
          docker-compose -f docker-compose-test.yml up --build init_service

      - name: Run Docker-Compose pour les tests
        run: |
          docker-compose -f docker-compose-test.yml up --build --exit-code-from test_runner test_runner



