name: CI

on:
  push:
    branches:
      - '*'  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Create .env file
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "GF_SECURITY_ADMIN_PASSWORD=${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}" >> .env

      - name: Create .env file in the api directory
        run: |
          echo "ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}" >> api/.env
          echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" >> api/.env
          echo "USER_USERNAME=${{ secrets.USER_USERNAME }}" >> api/.env
          echo "USER_PASSWORD=${{ secrets.USER_PASSWORD }}" >> api/.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run Docker Compose
        run: |
          docker-compose -f docker-compose-test.yml up --build --abort-on-container-exit


